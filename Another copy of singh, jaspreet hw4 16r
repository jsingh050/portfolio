{"cells":[{"cell_type":"markdown","metadata":{"id":"Vl8Q3pb5FCic"},"source":["ECE 2195 HW4 Problem 2"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":534},"id":"sNLJQak1FCid","executionInfo":{"status":"ok","timestamp":1708656941188,"user_tz":300,"elapsed":8743,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}},"outputId":"20113280-da1c-4a34-f291-6ba08958e32c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n","x_train shape: (60000, 784)\n","Number of images in x_train 60000\n","Number of images in x_test 10000\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7c90f9e9c040>"]},"metadata":{},"execution_count":1},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Problem 2: MNIST Classification using a Multi Layer Perceptron\n","\n","# Import numpy, Tensorflow and Keras to build and run a custom ANN\n","import tensorflow as tf\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# Get the MNIST dataset from Keras for training and testing; x - input image, y - output label\n","(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()\n","\n","# Reshape the input data to fit the Keras ANN model - (Nsamples, 28, 28) is converted to (Nsamples, 28*28)\n","x_train = x_train.reshape(x_train.shape[0], x_train.shape[1]*x_train.shape[2])\n","x_test = x_test.reshape(x_test.shape[0], x_test.shape[1]*x_test.shape[2])\n","print('x_train shape:', x_train.shape)\n","print('Number of images in x_train', x_train.shape[0])\n","print('Number of images in x_test', x_test.shape[0])\n","\n","# Check sample image - change index to try different inputs\n","image_index = 1111\n","plt.imshow(x_test[image_index].reshape(28, 28),cmap='Greys')"]},{"cell_type":"code","source":["# 16 and relu: Importing the required Keras modules containing model and layers\n","from keras.models import Sequential\n","from keras.layers import Dense, Conv2D, Dropout, Flatten, MaxPooling2D, Activation\n","\n","# Set activation layer - sigmoid or relu\n","act_layer = 'relu'\n","\n","# Creating a Sequential Model and add the layers - hidden and output\n","model = Sequential()\n","\n","# Add 1st hidden layer\n","model.add(Dense(16, input_dim=784, activation=act_layer))\n","# Add 2nd hidden layer\n","# model.add(Dense(128, activation=act_layer))\n","\n","# randomly drop few connections - to reduce memory and may improve accuracy\n","# model.add(Dropout(0.2))\n","\n","# Output layer - 10 nodes for 10 output lables 0,1,...,9\n","model.add(Dense(10, activation=tf.nn.softmax))\n","\n","# Print summary of model built - look at number of parameters needed; more params -> more resources\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JIUs1-QscRJI","executionInfo":{"status":"ok","timestamp":1708656941581,"user_tz":300,"elapsed":395,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}},"outputId":"5e77f0b0-b8db-4377-9c21-0aef27270460"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 16)                12560     \n","                                                                 \n"," dense_1 (Dense)             (None, 10)                170       \n","                                                                 \n","=================================================================\n","Total params: 12730 (49.73 KB)\n","Trainable params: 12730 (49.73 KB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n7gQpBdUFCie","outputId":"876fc0f8-be8f-4a17-8f30-14e36ae88072","executionInfo":{"status":"ok","timestamp":1708656995390,"user_tz":300,"elapsed":53811,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","1875/1875 [==============================] - 11s 5ms/step - loss: 2.3830 - accuracy: 0.2725\n","Epoch 2/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 1.6536 - accuracy: 0.3734\n","Epoch 3/10\n","1875/1875 [==============================] - 5s 3ms/step - loss: 1.5227 - accuracy: 0.4235\n","Epoch 4/10\n","1875/1875 [==============================] - 4s 2ms/step - loss: 1.3484 - accuracy: 0.4862\n","Epoch 5/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 1.1356 - accuracy: 0.5714\n","Epoch 6/10\n","1875/1875 [==============================] - 4s 2ms/step - loss: 0.8822 - accuracy: 0.7021\n","Epoch 7/10\n","1875/1875 [==============================] - 3s 2ms/step - loss: 0.7627 - accuracy: 0.7486\n","Epoch 8/10\n","1875/1875 [==============================] - 4s 2ms/step - loss: 0.6976 - accuracy: 0.7656\n","Epoch 9/10\n","1875/1875 [==============================] - 4s 2ms/step - loss: 0.6773 - accuracy: 0.7734\n","Epoch 10/10\n","1875/1875 [==============================] - 3s 2ms/step - loss: 0.6658 - accuracy: 0.7744\n"]}],"source":["# Compile the ANN model with specific optimizer, loss function and performance metric\n","# optimizer = sgd for stochastic gradient descent, OR adam -\n","model.compile(optimizer='adam',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])\n","\n","# Train the ANN model iteratively for N epochs\n","n_epochs = 10\n","history = model.fit(x=x_train,y=y_train, epochs=n_epochs)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"0JYifHLcFCie","executionInfo":{"status":"ok","timestamp":1708656996684,"user_tz":300,"elapsed":1316,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}},"outputId":"1f06b2cc-5d53-4d48-c800-86de76d5b981"},"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 1s 2ms/step - loss: 0.6434 - accuracy: 0.7847\n","Test accuracy: 0.7846999764442444\n","1/1 [==============================] - 0s 83ms/step\n","\n","Prediction: 4\n","\n","Actual input\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Evaluate the ANN model with the test samples\n","score = model.evaluate(x_test, y_test)\n","print('Test accuracy:', score[1])\n","\n","# Check the ANN with an example\n","image_index = 1111\n","plt.imshow(x_test[image_index].reshape(28, 28),cmap='Greys')\n","pred = model.predict(x_test[image_index].reshape(1,28*28))\n","print('\\nPrediction:', pred.argmax())\n","print('\\nActual input')"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"ujjbTfWxFCie","colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"status":"ok","timestamp":1708656997017,"user_tz":300,"elapsed":339,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}},"outputId":"12f2b204-6fbd-4da5-996b-e26cb5a84866"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7c90f20b8610>]"]},"metadata":{},"execution_count":5},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["# Plot the Training Loss - loss should decrease and approach 0 with number of epochs\n","x = list(range(1, n_epochs+1))\n","ty = history.history['loss']\n","plt.title('Training Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Categorical Cross-entropy Loss')\n","plt.plot(x,ty)"]},{"cell_type":"markdown","metadata":{"id":"IN7AnRwuFCie"},"source":["ECE 2195 HW4 Problem 3"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"mbP2hB67FCie","executionInfo":{"status":"ok","timestamp":1708656997017,"user_tz":300,"elapsed":5,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}}},"outputs":[],"source":["Vthresh = 1\n","Cmem = 1e-12 #1pF\n","Erev = 2.0\n","lrn_rate = 0.2\n","Gleak = 1e-8\n","Eleak = 0.0\n","I0 = 1e-6 #\n","I1 = 1e-6\n","tau_decay = 10\n","tau_learn = 100\n","dt = 1e-6 #1us step size\n","\n","# Calculate input synaptic current for neuron N2 only\n","# for N0 and N1 Isyn is external input current, for N2 Isyn is sum of synaptic input currents\n","# Gsyn is the weight change of the synapse (W0 or W1)\n","def calc_Isyn(Isyn, Gsyn, tspike_pre, tnow, tau_decay, Erev, Vmem):\n","    Isyn[tnow+1] += Gsyn*np.exp((tspike_pre-tnow)/tau_decay)*(Erev-Vmem[tnow])\n","    return Isyn\n","\n","# Calcuate membrane voltage for neurons N0, N1 and N2 -\n","# for N0 and N1 Isyn is external input current, for N2 Isyn is sum of synaptic input currents\n","def calc_Vmem(Vm_init, Isyn, Cmem, dt):\n","    return Vm_init + np.sum(Isyn, axis=0)*dt/Cmem + Gleak*(Eleak-Vm_init)*dt/Cmem\n","\n","# STDP Weight update rule - delta(Gsyn) is the weight change of the synapse (W0 or W1)\n","def train_STDP(lrn_rate, tpre, tpost, tau_learn):\n","    return lrn_rate*np.sign(tpost-tpre)*np.exp(np.sign(tpre-tpost)*(tpost-tpre)/tau_learn)\n","\n","# Your tasks\n","# 1. Build a simple neural network as shown in HW4 and initialize W0 and W1 (Gsyn0 and Gsyn1) correctly.\n","# 2. Generate input currents I0 and I1. Assume I0 and I1 to be atleast 1uA amplitude and applied for 1ms.\n","# 3. Compute Isyn and Vmem using the predefined functions\n","# 4. Use STDP rule to calculate change in weights\n","# 5. Demonstrate associative learning as described in problem 3, by tuning I0, I1, W0 and W1."]},{"cell_type":"code","execution_count":6,"metadata":{"id":"ZPRGp4UmFCie","executionInfo":{"status":"ok","timestamp":1708656997017,"user_tz":300,"elapsed":5,"user":{"displayName":"Jessi Singh","userId":"14059301024872086790"}}},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"},"colab":{"provenance":[{"file_id":"1SwJyDD0AF6CW7tOWgACQh4IYJXrxSp0B","timestamp":1708656809933},{"file_id":"15dJjoWw_uLh5w0ZYJlszlUYfn-_lUfiS","timestamp":1708656115852}]}},"nbformat":4,"nbformat_minor":0}